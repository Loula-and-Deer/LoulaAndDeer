{% include 'toolbar-cart-handler' %}

<script>
(function($) {
  $(function() {

    var understoodPersonalisedChanges = false;

    // using vanilla JS selector for compatibility
    var paypalCheckoutButton = document.getElementById("paypal-express-button");

    //Confirmation dialogue required by our bank.
    $('.cart-buttons input[type="submit"]').on('click', function(e) {
      if ($('#agree').is(':checked')) {
        $(this).submit();
      }
      else {
        alert("You must agree with the terms and conditions of sales to check out.");
        e.preventDefault();
      }
    });

    //Changes style of PayPal checkout button
    paypalCheckoutButton.classList.remove("additional-checkout-button");
    paypalCheckoutButton.classList.remove("additional-checkout-button--paypal-express");
    paypalCheckoutButton.classList.add("extra-checkout-button")

    //Removes "Checkout with PayPal" text from PayPal button
    $('#paypal-express-button').contents().filter(function() {
      return this.nodeType === 3;
    }).remove();

    //Item information handler
    $(".fa-ellipsis-v").on("click", function() {
      var item = $(this).parent().parent();
      var info = $(this).parent().parent().find(".cart-item-addtional-info");
      if (item.attr("expanded") == "false") {
        item.attr("expanded", "true");
        info.css("display", "block");
        item.height(100 + info.height());
      } else {
        item.attr("expanded", "false");
        $(window).width() < 420 ? item.height(120) : item.height(100);
        info.css("display", "none");
      }
    });

    //Dec item value
    $('.cart__quantity_dec').on("click", function() {
      var val = $(this).next().val();
      if (val > 1){
        val--;
        $(this).next().val(val);
        $(this).next().trigger("change");
      }
    });

    //Increments item value
    $('.cart__quantity_inc').on("click", function() {
      var val = $(this).prev().val();
      val++;
      $(this).prev().val(val);
      $(this).prev().trigger("change");
    });

    //On item quantity change
    $('.cart__quantity').on("change", function(e) {
      var quanDOM = $(this);
      //Disables quantity input.
      quanDOM.attr("disabled", "disabled");
      var line = $(this).attr("data-line");
      var quan = $(this).val();
      var lineprice = '#lineprice_' + line;
      var linetitle = '#linetitle_' + line;

      if ($(linetitle).html().toLowerCase().indexOf("personalised") >= 0 && !understoodPersonalisedChanges) {
        var answer = confirm("Hello! Just to let you know, changing the quantity of a personalised item may have an unwanted result. Would you like to change it anyway?")
        if (!answer) {
          understoodPersonalisedChanges = true;
          quanDOM.removeAttr("disabled");
        } else {
          e.preventDefault();
        }
      }

      /**
       * POSTS quantity change
       * @param {String} URL to POST to
       * @param {Object} Data to POST
       * @param {Fucntion} Function on success
       * @return {JSON} The JSON of the cart.
       */
        $.post('/cart/change.js', {
            line: line,
            quantity: quan
          }, function(cart) {
            //Item offset of -1
            //Line item index is cart item index - 1
            var item = cart.items[line - 1];

            //Update totals.
            $('.subtotal').html(Shopify.formatMoney(cart.total_price, "{{ shop.money_with_currency_format}}"));
            $('.subtotal-preview').html("SUBTOTAL &nbsp; &nbsp; &nbsp;" + Shopify.formatMoney(cart.total_price, "{{ shop.money_with_currency_format  }}"));

            //Update item price with (price * quantity).
            $(lineprice).html(Shopify.formatMoney(item.line_price, "{{ shop.money_with_currency_format }}"));

            //Update item title.
            if (item.quantity > 1) {
              $(linetitle).html(item.product_title + " | x" + item.quantity);
            } else {
              $(linetitle).html(item.product_title);
            }

            //Update cart on toolbar
            updateCartToolbars(cart.total_price, cart.item_count);

            //Enables quantity input to be changed.
            quanDOM.removeAttr("disabled");

          }, "json")
          .fail(function(xhr, status, error) {
            //POST failed.
            if(status == 422){

            } else {
            alert("Something wen't wrong and we're working hard to fix it! Sorry about that.");
          }
          });
      });
    });
  })(jQuery);
</script>
